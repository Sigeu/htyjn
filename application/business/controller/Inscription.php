<?php
// +----------------------------------------------------------------------
// | Ht.Memorial
// +----------------------------------------------------------------------
// | Copyright (c) 2017-2017 http://www.yn123.com All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: andy <290648237@qq.com>
// +----------------------------------------------------------------------

namespace app\business\controller;

use app\business\service\DataService;
use app\business\service\ToolsService;
use think\Db;

/**
 * 碑文管理
 * Class Inscription
 * @package app\business\controller
 * @author ding <dingzhangze@163.com>
 * @date 2017/8/8
 */
class Inscription extends BasicBusiness
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->user = session('b_user');
        $this->uid = $this->user['create_by'];
    }
    /**
     * 指定当前碑文数据表
     * @var string
     */
    protected $table = 'Inscription';
    protected $temptable = 'Inscription_temp';

    /**
     * 碑文列表
     */
    public function inscription()
    {
        $this->title = '碑文管理';

        // 获取到所有GET参数
        $get = $this->request->get();

        $db = Db::name($this->table)->where('create_by',$this->uid)->order('id desc');
        // 应用搜索条件
        foreach (['order_sn', 'cemetery_sn','member_name'] as $key) {
            if (isset($get[$key]) && $get[$key] !== '') {
                $db->where($key, 'like', "%{$get[$key]}%");
            }
        }
        // $order_state = DB::table('tp_business_finance')->where(['order_source'=>2,'order_sn'=>000])->value('order_state');
        // 实例化并显示
        $result = parent::_list($db, false,false);
        // print_r($result);die;
        $order_state = [];
        foreach($result['list'] as $k => $v){
            // print_r($v);
            $result['list'][$k]['order_state'] = DB::table('tp_business_finance')->where('id',$v['finance_id'])->value('order_state');
        }
        return $this->fetch('',$result);
    }

    /**
     * 添加碑文
     * @return array|string
     */
    public function editInscription()
    {
        $this->title='添加碑文';
        $id=$this->request->get('id');
        // print_r($id);die;
        $inscr = Db::name('inscription')->where('id',$id)->find();
        $inscrpack=Db::name('cemetery_pack')->where(['cemetery_sn'=>$inscr['cemetery_sn'],'type'=>0])->select();
        $pack = [];
        $comboIds=[];
        $cost = 0;
        foreach ($inscrpack as $k=>$value){
            $combo = Db::name('cemetery_combo')->where('id',$value['pack_id'])->find();
            $pack[] = $combo;
            $comboIds[] = $combo['cost'];
        }
        $cost = array_sum($comboIds);

        $this->assign('cost',$cost);
       $this->assign('pack',$pack);
        $data=$this->selectContract();
        $this->assign('data',$data);
        return $this->_form($this->table, 'inscriptionform');
    }

    /**
     * [确认完成碑刻]
     */
    public function mkSureIns(){
        $id = input('post.id');
        if(DB::table('tp_inscription')->where('id',$id)->update(['status'=>1])){
            return ['code'=>1,'msg'=>'确认成功'];
        }else{
            return ['code'=>0,'msg'=>'确认失败'];
        }
    }


    /**
     * 分类 表单数据前缀方法
     * @param array $vo
     */
    protected function _editInscription_form_filter(&$vo)
    {
        if ($this->request->isGet()) {
            //获取销售人员
            $cond = [
                'status' => 1,
                'create_by' => $this->uid
            ];
            $staff = Db::name('BusinessStaff')->where($cond)->select();
            $id=$this->request->param('id');
            $tomb = Db::name('inscription')->where('id',$id)->find();
            //获取订单信息
            $reserve = Db::name('cemetery_order')->where('cemetery_sn', $tomb['cemetery_sn'])->find();

            //获取销售人员
            $seller = Db::name('BusinessStaff')->where('id', $reserve['seller'])->value('name');
            $this->assign('seller', $seller);
            $this->assign('tomb', $tomb);
            $this->assign('staff', $staff);
        }

        if($this->request->isPost()) {
            if(is_mobile()){
                $params = ajax_url_params_to_array($this->request->param('params'));
            }else{
                $params = $this->request->post();
            }
            $params['status']=1;
            $res=Db::name($this->table)->update($params);
            $result=Db::name($this->table)->where('id',$params['id'])->find();
            $finance=[
                'order_amount'=>$params['cost'],
                'order_state'=>20
            ];
            $fin=Db::name('business_finance')->where(['order_sn'=>$result['order_sn'],'order_source'=>'碑文订单'])->update($finance);
            $conData=[
                'name'=>$result['member_name'],
                'id_card'=>$result['id_card'],
                'phone'=>$result['phone'],
                'amount'=>$params['cost'],
                'create_time'=>date('Ymd'),
                'type'=>'碑文费用',
                'order_sn'=>$result['order_sn'],
                'agent'=>$params['seller'],
                'create_by'=>$this->uid
            ];
            $coninfo=Db::name('cemetery_consume')->where('order_sn',$result['order_sn'])->find();
            if(isset($coninfo)){
                Db::name('cemetery_consume')->insert($conData);
            }else{
                Db::name('cemetery_consume')->where('id',$coninfo['id'])->update($conData);
            }
        }
    }

    /**
     * 添加碑文 返回结果跳转处理
     * @param $result
     */
    protected function _editInscription_form_result(&$result)
    {
        $result !== false ? $this->success('恭喜，保存成功哦！', url('/').'business.html#'.url('inscription').'?spm='.$this->spm) : $this->error('保存失败，请稍候再试！');
    }

    /**
     * 删除碑文订单
     */
    public function delInscription()
    {
        if (DataService::update($this->table)) {
            $this->success("删除成功！", '');
        }
        $this->error("删除失败，请稍候再试！");
    }

    /**
     * 订单详情
     * @return mixed
     */
    public function showInscription()
    {

        $this->assign('title', '订单详情');
        $orderId = $this->request->param('id');
        $orderInfo = Db::name($this->table)->where('id', $orderId)->find();
        $staff = DB::table('tp_business_staff')->where('id',$orderInfo['opera'])->find();
        $cOrderInfo = DB::table('tp_cemetery_order')->where('order_sn',$orderInfo['order_sn'])->find();
        $fOrderInfo = DB::table('tp_business_finance')->where(['order_sn'=>$orderInfo['order_sn'],'order_source'=>2])->find();
        $this->assign('orderInfo', $orderInfo);
        $this->assign('cOrderInfo', $cOrderInfo);
        $this->assign('fOrderInfo', $fOrderInfo);
        $this->assign('staff', $staff);
        return $this->fetch('showinscription');
    }


    /**
     * 上传碑文
     */
    public function inscriptionImage()
    {
        $data=input('post.');
        $data['inscr_image']=$data['value'];
        unset($data['value']);
        $inscr=Db::name($this->table)->update($data);

        if($inscr){
            return $this->response('','','上传成功！');
        }else{
            return $this->response('','','上传失败！');
        }

    }


    /**
     * 碑文模板列表
     */
    public function inscriptionTemp()
    {
        $this->title='刻碑模板管理';
        $Map=[
            'create_by'=>$this->uid
        ];
        $db = Db::name($this->temptable)->where($Map)->order('id asc');
        parent::_list($db, false);
    }

    /**
     * [添加刻碑分类]
     */
    public function addparent(){
        $this->title = '添加刻碑分类';
        return $this->fetch('tempparentform',['title'=>'添加刻碑分类']);
    }

    public function TreeData(){
        // $tmptree = $this->lower('tp_inscription_parent','cid',0);
        $tmptree = DB::table('tp_inscription_parent')->where(['create_by'=>$this->uid])->select();
        $tmptree = $this->getTree($tmptree,false);
        return $tmptree;      
    }

    /**
     * 整理出tree数据
     * @param $pInfo
     * @param $spread
     */
    function getTree($pInfo, $spread = true){
        $res  = [];
        $tree = [];
        //整理数组
        foreach ($pInfo as $key => $vo) {

            if ($spread) {
                $vo['spread'] = true; //默认展开
            }
            $res[$vo['id']]             = $vo;
            $res[$vo['id']]['children'] = [];
        }
        unset($pInfo);
        //查找子孙
        foreach ($res as $key => $vo) {
            if (0 != $vo['cid']) {
                $res[$vo['cid']]['children'][] = &$res[$key];
            }
        }
        //过滤杂质
        foreach ($res as $key => $vo) {
            if (0 == $vo['cid']) {
                $tree[] = $vo;
            }
        }
        unset($res);
        return $tree;
    }

    /**
     * [添加顶级分类]
     */
    function addTopClass(){
        $param = input('post.');
        if($param['name'] == ''){
            return ['code'=>0,'msg'=>'名称不能为空'];
        }
        $data = [
            'name' => $param['name'],
            'cid' => 0,
            'create_by'=>$this->uid
        ];
        if(DB::table('tp_inscription_parent')->insert($data)){
            return ['code'=>1,'msg'=>'添加成功'];
        }else{
            return ['code'=>0,'msg'=>'添加失败'];
        }
    }

    /**
     * [添加分类]
     */
    function addClass(){
        $param = input('post.');
        $param['create_by'] = $this->uid;
        if($param['name'] == ''){
            return ['code'=>0,'msg'=>'名称不能为空'];
        }
        if(DB::table('tp_inscription_parent')->insert($param)){
            return ['code'=>1,'msg'=>'添加成功'];
        }else{
            return ['code'=>0,'msg'=>'添加失败'];
        }
    }

    /**
     * [编辑分类]
     */
    function editClass(){
        $param = input('post.');
        if($param['name'] == ''){
            return ['code'=>0,'msg'=>'名称不能为空'];
        }
        if(DB::table('tp_inscription_parent')->where('id',$param['id'])->update($param)){
            return ['code'=>1,'msg'=>'编辑成功'];
        }else{
            return ['code'=>0,'msg'=>'请更新数据'];
        }
    }

    /**
     * [删除分类]
     */
    function delClass(){
        $id = input('post.id');
        $arr = DB::table('tp_inscription_parent')->where('cid',$id)->select();
        if(empty($arr)){
            if(DB::table('tp_inscription_parent')->where('id',$id)->delete()){
                return ['code'=>1,'msg'=>'删除成功'];
            }else{ 
                return ['code'=>0,'msg'=>'删除失败'];
            }
        }else{
            return ['code'=>0,'msg'=>'该分类下有子分类，不能删除！'];
        }
    }

    // 递归查询下级
    // public function lower($table,$field,$id){
    //     $arr = [];
    //     $select = DB::table($table)->where($field,$id)->select();
    //     foreach($select as $k => $v){
    //         if($v){
    //             array_push($arr,$v);
    //             array_push($arr,$this->lower($table,$field,$v['id']));
    //         }
    //     }
    //     $arr = array_merge(array_filter($arr));
    //     return $arr;
    // }





    /**
     * 添加刻碑模板
     */
    public function addtemp()
    {
        $this->title='添加刻碑模板';
        if($this->request->isPost()){
            $param = input('post.');
            unset($param['pid_name']);
            $this->_form($this->temptable);
        }
        return $this->fetch('tempform',['title'=>'添加刻碑模板']);
        // return $this->_form($this->temptable,'tempform');
    }

    protected function _form_result(&$result)
    {
        $result !== false ? $this->success('恭喜，保存成功哦！', url('/').'business.html#'.url('inscriptionTemp').'?spm='.$this->spm) : $this->error('保存失败，请稍候再试！');
    }

    /**
     * 编辑刻碑模板
     */
    public function edit()
    {
        $this->title='编辑刻碑模板';
        $id = input('get.')['id'];
        $Info = DB::table('tp_inscription_temp')->alias('a')
                  ->join('tp_inscription_parent b','a.pid = b.id')
                  ->where('a.id',$id)
                  ->field('b.name,b.id')
                  ->find();
        $this->assign("Info",$Info);
        return $this->_form($this->temptable,'tempform');
    }

    /**
     * 删除刻碑模板
     */
    public function del(){
        // if (DataService::update($this->table)) {
        //     $this->success("删除成功！", '');
        // }
        // $this->error("删除失败，请稍候再试！");
        $param = input('post.');
        $ids = explode(',',$param['id']);
        DB::startTrans();
        try{
            foreach($ids as $v){
                DB::table('tp_inscription_temp')->where('id',$v)->delete();
            }
            Db::commit();
            return ['code'=>1,'msg'=>'删除成功'];
        } catch (Exception $e) {
            Db::rollback();
            return ['code'=>0,'msg'=>$e->getMessage()];
        }
    }


    /*
  * 选择刻碑模板
  */
    public function selectContract()
    {
        $category = Db::name($this->temptable)->where(['create_by'=>$this->uid])->select();
        $category = ToolsService::arr2tree($category);

        return $category;
    }


    /**
     * 打印合同
     */
    public function contract()
    {
        $order_id = $this->request->param('order_id');
        $data=$this->selectContract();
        $order_info=Db::name('cemetery_order')->where('order_id',$order_id)->find();
        $tomb=Db::name('cemetery_sn')->where('cemetery_sn',$order_info['cemetery_sn'])->find();

        $this->assign('tomb',$tomb);
        $this->assign('order_info',$order_info);
        $this->assign('data',$data);
        return $this->fetch('');
    }

    /**
     * 获取合同内容
     */
    public function ajaxContract()
    {
        $id=input('post.');
        $contract=Db::name('Cemetery_contract')->where($id)->value('content');
        return $this->response($contract);
    }


}
