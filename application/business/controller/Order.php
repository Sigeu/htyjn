<?php
// +----------------------------------------------------------------------
// | Ht.Memorial
// +----------------------------------------------------------------------
// | Copyright (c) 2017-2017 http://www.yn123.com All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: andy <290648237@qq.com>
// +----------------------------------------------------------------------

namespace app\business\controller;

use app\api\model\Jssdk;
use app\business\service\DataService;
use app\business\service\ToolsService;
use app\business\model\DeadModel as DeadModel;
use think\Request;
use think\Db;
/**
 * 订单管理
 * Class Order
 * @package app\admin\controller
 * @author ding <dingzhangze@163.com>
 * @date 2017/06/08
 */
class Order extends BasicBusiness
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->user = session('b_user');
        $this->uid=$this->user['create_by'];
    }
    /**
     * 指定当前数据表
     * @var string
     */
    protected $tables = 'cemeterySn';
    protected $table = 'CemeteryOrder';
    protected $categoryTable = 'CemeteryCategory';
    protected $cemeterySnTable = 'cemeterySn';
    /**
     * 订单列表
     */
    public function index()
    {
        $this->title = '订单管理';
        $get = $this->request->get();

        $map=[
            'create_by'=>$this->uid,
            'type'=>2
        ];
        $db = Db::name($this->table)->where($map)->order('order_id desc');
        // 应用搜索条件
        foreach (['phone', 'buyer_name_1','dead_id_card'] as $key) {
            if (isset($get[$key]) && $get[$key] !== '') {
                $db->where($key, 'like', "%{$get[$key]}%");
            }
        }
        $data = parent::_list($db, true, false);

        foreach ($data['list'] as $key => $list) {
            $data['list'][$key]['seller'] = Db::name('business_staff')->where('id', $list['seller'])->value('name');
            // $data['list'][$key]['status'] = DB::table('tp_cemetery_bury')->where('order_sn',$list['order_sn'])->value('status');
            $data['list'][$key]['fOrderState'] = DB::table('tp_business_finance')
                                                 ->where([
                                                    'order_sn'=>$data['list'][$key]['order_sn'],
                                                    'order_source'=>1
                                                 ])->value('order_state');
            $data['list'][$key]['cemetery_type'] = DB::table('tp_cemetery_sn')->where('cemetery_sn',$list['cemetery_sn'])->value('type');
        }
        return $this->fetch('', $data);
    }


    /**
     * 预售订单列表
     */
    public function reserve()
    {
        $this->title = '预售订单管理';
        $get = $this->request->get();

        $map=[
            'create_by'=>$this->uid,
            'type'=>1
        ];
        $db = Db::name($this->table)->where($map)->order('order_id desc');
        // 应用搜索条件
        foreach (['phone', 'buyer_name_1','dead_id_card'] as $key) {
            if (isset($get[$key]) && $get[$key] !== '') {
                $db->where($key, 'like', "%{$get[$key]}%");
            }
        }
        $data = parent::_list($db, true, false);
        foreach ($data['list'] as $key => $list) {
            $data['list'][$key]['seller'] = Db::name('business_staff')->where('id', $list['seller'])->value('name');
            $data['list'][$key]['cemetery_id'] = Db::name('cemetery_sn')->where('cemetery_sn', $list['cemetery_sn'])->value('id');
        }
        return $this->fetch('', $data);

    }




    /**
     * 查看订单
     */
    public function orderGoods()
    {
        $this->assign('title', '订单详情');
        $orderId = $this->request->param('order_id');
        $orderInfo = Db::name($this->table)->where('order_id', $orderId)->find();
        $orderInfo['finnshed_time']=Db::name('business_finance')->where('order_sn', $orderInfo['order_sn'])->value('finnshed_time');
        $orderGoods = Db::name($this->table)->where('order_id', $orderId)->select();
        $inscr = Db::name('inscription')->where('order_sn', $orderInfo['order_sn'])->find();
        $bury= Db::name('cemetery_bury')->where('order_sn', $orderInfo['order_sn'])->find();
        $seller=Db::name('business_staff')->where('id',$orderInfo['seller'])->find();
        $finance = Db::name('business_finance')->where('order_sn', $orderInfo['order_sn'])->select();

        $this->assign('finance',$finance);
        $this->assign('seller',$seller);
        $this->assign('bury',$bury);
        $this->assign('inscr',$inscr);
        $this->assign('orderInfo', $orderInfo);
        $this->assign('orderGoods', $orderGoods);
        return $this->fetch('ordergoods');
    }


    /**
     * 删除订单
     */
    public function del()
    {
        $id=input('post.id');
        $id_arr = explode(',',$id);
        DB::startTrans();
        try {
            foreach ($id_arr as $k => $v) {
                $tomb=Db::name('cemetery_order')->where('order_id',$v)->find();
                $delstate=Db::name('cemetery_sn')->where('cemetery_sn',$tomb['cemetery_sn'])->update(['is_sell'=>0,'is_move'=>0]);
                $delorder=Db::name('cemetery_order')->where('order_id',$v)->delete();
            }
            Db::commit();
            $this->success("删除成功！", '');
        } catch (Exception $e) {
            Db::rollback();
            $this->error("删除失败，请稍候再试！");
        }
        // $id=input('post.id');
        // $tomb=Db::name('cemetery_order')->where('order_id',$id)->find();
        // $delstate=Db::name('cemetery_sn')->where('cemetery_sn',$tomb['cemetery_sn'])->update(['is_sell'=>0,'is_move'=>0]);
        // $delorder=Db::name('cemetery_order')->where('order_id',$id)->delete();
        // if ($delorder && $delstate) {
        //     $this->success("删除成功！", '');
        // }
        // $this->error("删除失败，请稍候再试！");
    }

    /**
     * 取消订单
     */
    public function cancelOrder()
    {
        $id=input('post.id');
        $tomb=Db::name('cemetery_order')->where('order_id',$id)->find();
        $delstate=Db::name('cemetery_sn')->where('cemetery_sn',$tomb['cemetery_sn'])->update(['is_sell'=>0,'is_move'=>0]);
        $delorder=Db::name('cemetery_order')->where('order_id',$id)->delete();
        if ($delorder && $delstate) {
            $this->success("订单取消成功！", '');
        }
        $this->error("订单取消失败，请稍候再试！");
    }

    /*
     * 添加订单
     */
    public function add()
    {
        return $this->_form($this->table, 'form');
    }

    protected function _form_filter(&$vo)
    {
        if($this->request->isPost()){
            $result=input('post.');
            $sn=input('post.cemetery_sn');
            $hall_sn=Db::name('Hall')->where('cemetery_sn',$sn)->find();
            $goods_name=Db::name($this->tables)->where('cemetery_sn',$sn)->find();
            $result['goods_name']=$goods_name['name'];
            $result['goods_amount']=$goods_name['price'];
            $result['hall_sn']=$hall_sn['id'];
            $order_sn=$this->uid.$hall_sn['id'];
            $result['order_sn']=$order_sn;

            // 插入订单表
            $ret=Db::name($this->table)->insert($result);
            if($ret){
               $res=[
                 'is_sell'=>1
               ];
                $ce=Db::name($this->tables)->where('cemetery_sn',$sn)->update($res);
            }
           $ce && $ret !== false ? $this->success('恭喜，保存成功哦！', url('/').'business.html#'.url('order/index').'?spm='.$this->spm) : $this->error('保存失败，请稍候再试！');
        }
    }

    /*
     * 选择产品
     */
    public function selectGoods()
    {
        $category = Db::name($this->categoryTable)->where(['create_by'=>$this->uid,'is_deleted'=>0])->order('sort desc,id desc')->select();
        $category = ToolsService::arr2tree($category);
        foreach ($category as $ckey=>$cate){

            if(isset($cate['sub'])){
                foreach ($cate['sub'] as $skey=>$sub){
                    $goods = $this->_filterGoods($sub['id']);
                    $category[$ckey]['sub'][$skey]['goods'] = $goods;
                }
            }else{
                $goods = $this->_filterGoods($cate['id']);
                $category[$ckey]['goods'] = $goods;
            }

        }
        $this->assign('category', $category);
        return $this->fetch('selectgoods');
    }

    protected function _filterGoods($cid = 0)
    {

        $map = [];
        if($cid){
            $map['is_sell']=0;
//            $map['cid'] = $cid;
            $map['is_deleted'] = 0;
            $map['create_by'] = $this->uid;
        }
        $db = Db::name($this->tables)->where($map)->order('id desc')->select();
        return $db;
    }

    /*
     * 选择客户
     */
    public function selectCustomer()
    {
        // 获取到所有GET参数
        $get = $this->request->get();
        // 实例Query对象
        $map=[
            'is_deleted'=>0,
            'create_by'=>$this->uid
        ];
        $db = Db::name("Customer")->where($map);
        parent::_list($db);
    }

    /*
   * 选择销售人员
   */
    public function selectSeller()
    {
        // 获取到所有GET参数
        $get = $this->request->get();
        // 实例Query对象
        $map=[
            'is_deleted'=>0,
            'create_by'=>$this->uid
        ];
        $db = Db::name("BusinessStaff")->where($map);
        // 应用搜索条件
        // 实例化并显示
        parent::_list($db);
    }


    /**
     * 指派碑文订单
     */
    /*
    public function tablet()
    {
        $this->title='指派碑文订单';
        $data = $this->request->param();
        //获取销售人员
        $cond = [
            'status' => 1,
            'create_by' => $this->uid
        ];
        $staff = Db::name('BusinessStaff')->where($cond)->select();

        foreach ($staff as $k=>$v){
            $staff[$k]['sector']=Db::name('BusinessAuth')->where('id',$v['sector'])->value('name');
        }

        //获取订单信息
        $reserve = Db::name('cemetery_order')->where('order_id',$data['order_id'])->find();
        $this->assign('reserve',$reserve);
        $this->assign('staff', $staff);

        if($this->request->isPost()) {
            $info = $this->request->param();
            $iMap=[
                'member_name'=>$reserve['buyer_name_1'],
                'id_card'=>$reserve['buyer_id_1'],
                'phone'=>$reserve['phone'],
                'cemetery_id' => $reserve['cemetery_id'],
                'cemetery_sn' => $info['cemetery_sn'],
                'order_sn'=>$info['order_sn'],
                'remark'=>$info['remark'],
                'opera'=>$info['opera'],
                'create_at'=>time(),
                'create_by'=>$this->uid
            ];

            $finance=[
                'cemetery_sn' => $info['cemetery_sn'],
                'order_sn'=>$info['order_sn'], //订单编号
                'buyer_id_card'=>$reserve['buyer_id_1'],	//买家身份证号
                'buyer_name'=>$reserve['buyer_name_1'],	//买家姓名
                'buyer_phone'=>$reserve['phone']	,//买家手机
                'add_time'=>time(),//订单生成时间
                'seller'=>$reserve['seller'],
                'create_by'=>$this->uid		//创建者
            ];
            $tabl_1=Db::name('inscription')->where('order_sn',$info['order_sn'])->find();
            if(empty($tabl_1)){
                $ret=  Db::name('inscription')->insert($iMap);
            }else{
                $this->error('此订单已经指派');
            }

            $tabl_2=Db::name('business_finance')->where(['order_sn'=>$info['order_sn'],'order_source'=>'2'])->find();
            if (empty($tabl_2)){
                $res=Db::name('business_finance')->data(['order_source'=>'2'])->insert($finance);//生成碑文报表
            }else{
                $this->error('此订单已经指派');
            }

            if ($ret&&$res){
                Db::name($this->table)->where( 'order_sn',$info['order_sn'])->update(['is_tablet'=>1]);
                // 成功 推送到微信号
                $jssdk = new Jssdk();
                $wx_content = "您有一个刻碑订单!墓穴编号为".$info['cemetery_sn']."订单编号为".$info['order_sn']."客户姓名为".$reserve['buyer_name_1'];
                $userInfo = Db::name('BusinessStaff')->where('id', $info['opera'])->find();
                $jssdk->push_msg($userInfo['wechat_openid'], $wx_content);


                $this->success('刻碑订单指派成功！', url('/').'business.html#'.url('order/index').'?spm='.$this->spm);
            }else {
                // 失败
                $this->error('订单指派失败，请稍候再试！');
            }
        }
        return $this->fetch('', ['title' => $this->title]);
    }
    */


    /**
     * 指派碑文订单
     */
    public function tablet(){
        $order_id = input('order_id');
        //获取销售人员
        $cond = [
            'status' => 1,
            'create_by' => $this->uid
        ];
        $staff = Db::name('BusinessStaff')->where($cond)->select();

        foreach ($staff as $k=>$v){
            $staff[$k]['sector']=Db::name('BusinessAuth')->where('id',$v['sector'])->value('name');
        }
         //获取订单信息
        $reserve = Db::name('cemetery_order')->where('order_id',$order_id)->find();
        $this->assign('reserve',$reserve);
        $this->assign('staff', $staff);
        $cemetery_type = DB::table('tp_cemetery_sn')->where('cemetery_sn',$reserve['cemetery_sn'])->value('type');
        //获取选择的套餐
        $inscrpack=Db::name('cemetery_pack')->where(['order_sn'=>$reserve['order_sn'],'type'=>0])->select();
        $pack = [];
        foreach ($inscrpack as $k=>$value){
            $pack[] =Db::name('cemetery_combo')->where('id',$value['pack_id'])->find();
        }

        // 获取碑刻模板
        $InsTmps = DB::table('tp_inscription_temp')->select();

        $this->assign('InsTmps',$InsTmps);
        $this->assign('pack',$pack);
        $this->assign('pack',$pack);
        $data=$this->selectContract();
        $this->assign('data',$data);

        if($this->request->isPost()) {
            $info = input('post.');
            $order_amount = $info['cost'];
            // if(empty($pack)){
            //     $order_amount = $info['cost'];
            // }else{
            //     $order_amount = 0;
            // }
            $iMap=[
                'member_name'=>$reserve['buyer_name_1'],
                'id_card'=>$reserve['buyer_id_1'],
                'phone'=>$reserve['phone'],
                'cemetery_id' => $reserve['cemetery_id'],
                'cemetery_sn' => $info['cemetery_sn'],
                'order_sn'=>$info['order_sn'],
                'remark'=>$info['remark2'],
                'opera'=>$info['opera'],
                'name'=>$info['name'],
                'create_at'=>time(),
                'create_by'=>$this->uid,
                'cost'=>$info['cost'],
                'content'=>$info['content']
            ];
            if($order_amount == 0){
                $finance=[
                    'cemetery_sn' => $info['cemetery_sn'],
                    'order_sn'=>$info['order_sn'],              //订单编号
                    'buyer_id_card'=>$reserve['buyer_id_1'],    //买家身份证号
                    'buyer_name'=>$reserve['buyer_name_1'],     //买家姓名
                    'buyer_phone'=>$reserve['phone']    ,       //买家手机
                    'add_time'=>time(),                         //订单生成时间
                    'seller'=>$reserve['seller'],
                    'create_by'=>$this->uid,                    //创建者
                    'order_source'=>2,
                    'order_amount'=>$order_amount,
                    'order_state'=>30,
                    'finnshed_time'=>time()
                ];
            }else{
                $finance=[
                    'cemetery_sn' => $info['cemetery_sn'],
                    'order_sn'=>$info['order_sn'],              //订单编号
                    'buyer_id_card'=>$reserve['buyer_id_1'],    //买家身份证号
                    'buyer_name'=>$reserve['buyer_name_1'],     //买家姓名
                    'buyer_phone'=>$reserve['phone'],           //买家手机
                    'add_time'=>time(),                         //订单生成时间
                    'seller'=>$reserve['seller'],
                    'create_by'=>$this->uid,                    //创建者
                    'order_source'=>2,
                    'order_amount'=>$order_amount,
                    'order_state'=>20
                ];
            }
            
            // var_dump($tabl_2);die;
            DB::startTrans();
            try {
                # 判断该墓穴类型 
                if($cemetery_type == 1){    # 单人
                    $tabl_1=Db::name('inscription')->where('order_sn',$info['order_sn'])->find();
                    $tabl_2=Db::name('business_finance')->where(['order_sn'=>$info['order_sn'],'order_source'=>'2'])->find();
                    if(empty($tabl_2)){
                        $res=Db::table('tp_business_finance')->insertGetId($finance);// 生成碑文报表
                        $iMap['finance_id'] = $res;
                    }else{                  
                        $this->error('此订单已经指派');
                    }
                    if(empty($tabl_1)){
                        $ret=  Db::name('inscription')->insertGetId($iMap);
                    }else{
                        $this->error('此订单已经指派');
                    }
                    DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_tablet'=>1]);
                }else{                      # 双人
                    if($reserve['is_tablet'] == 3){         # 指派完毕
                        $this->error('此订单已经指派完毕');
                    }elseif($reserve['is_tablet'] == 2){    # 指派一次
                        $res=Db::table('tp_business_finance')->insertGetId($finance);// 生成碑文报表
                        $iMap['finance_id'] = $res;
                        $ret=  Db::name('inscription')->insert($iMap);
                        DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_tablet'=>3]);
                    }else{                                  # 指派零次
                        $res=Db::table('tp_business_finance')->insertGetId($finance);// 生成碑文报表
                        $iMap['finance_id'] = $res;
                        $ret=  Db::name('inscription')->insert($iMap);
                        DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_tablet'=>2]);
                    }
                }
                Db::commit();
                // 成功 推送到微信号
                // $jssdk = new Jssdk();
                // $wx_content = "您有一个刻碑订单!墓穴编号为".$info['cemetery_sn']."订单编号为".$info['order_sn']."客户姓名为".$reserve['buyer_name_1'];
                // $userInfo = Db::name('BusinessStaff')->where('id', $info['opera'])->find();
                // $jssdk->push_msg($userInfo['wechat_openid'], $wx_content);
                $this->success('操作成功！', url('/').'business.html#'.url('order/index').'?spm='.$this->spm);
            } catch (Exception $e) {
                Db::rollback();
                $this->error('操作失败，请稍候再试！');
            }
            
        }
        return $this->fetch();
    }

    /**
     * 获取碑文模板内容
     */
    public function InsTmpsContent()
    {
        $id=input('post.');
        $content=Db::table('tp_inscription_temp')->where($id)->value('content');
        return $this->response($content);
    }


    /**
     * [获取碑文模板分类的子类]
     */
    function getTabletClassSons(){
        $param = input('post.');
        $Info = DB::table('tp_inscription_temp')->where('pid',$param['id'])->select();
        return $Info;
    }


    /**
     * 指派安葬订单
     */
    /*
    public function bury()
    {
        $this->title='指派安葬订单';
        $data = $this->request->param();
        // print_r($data);die;
        //获取销售人员
        $cond = [
            'status' => 1,
            'create_by' => $this->uid
        ];
        $staff = Db::name('BusinessStaff')->where($cond)->select();
        foreach ($staff as $k=>$v){
            $staff[$k]['sector']=Db::name('BusinessAuth')->where('id',$v['sector'])->value('name');
        }

        //获取订单信息
        $reserve = Db::name('cemetery_order')->where('order_id',$data['order_id'])->find();
        $this->assign('reserve',$reserve);
        $this->assign('staff', $staff);

        if($this->request->isPost()) {
            $info = $this->request->param();
            $iMap=[
                'member_name'=>$reserve['buyer_name_1'],
                'id_card'=>$reserve['buyer_id_1'],
                'phone'=>$reserve['phone'],
                'cemetery_id' => $reserve['cemetery_id'],
                'cemetery_sn' => $info['cemetery_sn'],
                'order_sn'=>$info['order_sn'],
                'remark'=>$info['remark'],
                'opera'=>$info['opera'],
                'create_at'=>time(),
                'create_by'=>$this->uid
            ];
            $finance=[
                'cemetery_sn' => $info['cemetery_sn'],
                'order_sn'=>$info['order_sn'], //订单编号
                'buyer_id_card'=>$reserve['buyer_id_1'],	//买家身份证号
                'buyer_name'=>$reserve['buyer_name_1'],	//买家姓名
                'buyer_phone'=>$reserve['phone']	,//买家手机
                'add_time'=>time(),		//订单生成时间
                'seller'=>$reserve['seller'],
                'create_by'=>$this->uid		//创建者
            ];

            $bury_1= Db::name('cemetery_bury')->where( 'order_sn',$info['order_sn'])->find();
            if(empty($bury_1)){
                $ret=  Db::name('cemetery_bury')->insert($iMap);
            }else{
                $this->error('此订单已经指派');
            }

            $bury_2=Db::name('business_finance')->where( ['order_sn'=>$info['order_sn'],'order_source'=>'3'])->find();
            if(empty($bury_2)){
                $res=Db::name('business_finance')->data(['order_source'=>'3'])->insert($finance);//生成安葬报表
                // print_r($res);
            }else{
                $this->error('此订单已经指派');
            }
            if ($ret && $res){
                Db::name($this->table)->where( 'order_sn',$info['order_sn'])->update(['is_bury'=>1]);
                // 成功 推送到微信号
                $jssdk = new Jssdk();
                $wx_content = "您有一个安葬订单!墓穴编号为".$info['cemetery_sn']."订单编号为".$info['order_sn']."客户姓名为".$reserve['buyer_name_1'];
                $userInfo = Db::name('BusinessStaff')->where('id', $info['opera'])->find();
                $jssdk->push_msg($userInfo['wechat_openid'], $wx_content);


                $this->success('订单指派成功！', url('/').'business.html#'.url('order/index').'?spm='.$this->spm);
            }else {
                // 失败
                $this->error('订单指派失败，请稍候再试！');
            }
        }
        return $this->fetch('', ['title' => $this->title]);
    }
    */

    private function _getCemeteryInfo($id)
    {
        $cemetery_id = Db::table('tp_cemetery_order')->where('order_id', $id)->value('cemetery_id');
        $data = Db::table('tp_cemetery_sn')->where('cemetery_id', $cemetery_id)->find();
        if($data==null){
            $this->error('该墓位不存在');
        }else{
            return $data;
        }
    }



    /**
     * [指派安葬订单 / 安葬登记]
     * 
     */
    public function bury(){
        $id = input('order_id');                                                # get方式获取order_id
        $data = Db::table('tp_cemetery_order')->where('order_id', $id)->find(); # 获取墓穴订单信息
        $data['Ctype'] = $this->_getCemeteryInfo($id)['type'];                  # 墓位类型(1:单人墓,2:双人墓)
        $data['name'] = $data['goods_name'];                                    # 墓穴名称
        $this->assign('vo', $data);
        //获取选择的套餐
        $inscrpack=Db::name('cemetery_pack')->where(['order_sn'=>$data['order_sn'],'type'=>1])->select();
        $pack = [];
        foreach ($inscrpack as $k=>$value){
            $pack[] =Db::name('cemetery_combo')->where('id',$value['pack_id'])->find();
        }
        $this->assign('pack',$pack);
        //获取客户信息
        $seller = Db::name('BusinessStaff')->where('id', $data['seller'])->find();
        // 使用者信息
        $dead1=Db::name('storage_dead')->where('id', $data['deader_id_1'])->find();
        // 如果是双人墓
        if($data['Ctype'] ==2){
            // 使用者1信息、使用者2信息
            $dead1=Db::name('storage_dead')->where('id', $data['deader_id_1'])->find();
            $dead2=Db::name('storage_dead')->where('id',$data['deader_id_2'])->find();
            $this->assign('dead2', $dead2);
        }

        if (!($data == null)) {
            $data['seller'] = $seller;
            $buyer_id = $data['buyer_id_1'];
            $buyer = Db::name('Customer')->where('id', $buyer_id)->find();
            $this->assign('buyer', $buyer);
        }
        //获取销售人员
        $cond = [
            'status' => 1,
            'create_by' => $this->uid
        ];
        $staff = Db::name('BusinessStaff')->where($cond)->select();
        //派遣人员
        $cond = [
            'status' => 1,
            'create_by' => $this->uid
        ];
        $staff_d = Db::name('BusinessStaff')->where($cond)->select();
        foreach ($staff_d as $k=>$v){
            $staff_d[$k]['sector']=Db::name('BusinessAuth')->where('id',$v['sector'])->value('name');
        }
        $this->assign('dead1', $dead1);
        $this->assign('seller',$seller);
        $this->assign('staff_d', $staff_d);
        $this->assign('staff', $staff);
        $this->assign('reser',$data);
        if($this->request->isPost()) {
            $info = input('post.');# 指派数据
            $iMap=[
                'member_name'=>$data['buyer_name_1'],
                'id_card'=>$data['buyer_id_1'],
                'phone'=>$data['phone'],
                'cemetery_id' => $data['cemetery_id'],
                'cemetery_sn' => $info['cemetery_sn'],
                'order_sn'=>$info['order_sn'],
                'remark'=>$info['remark'],
                'opera'=>$info['opera'],
                'create_at'=>time(),
                'create_by'=>$this->uid
            ];
            # 安葬登记数据
            if(is_mobile()){
                $result = ajax_url_params_to_array($this->request->param('params'));
                (empty($result['cost'])) && $this->error('支付金额不能为空');
                (empty($result['bury_time'])) && $this->error('安葬时间不能为空');
                (empty($result['dead_id_card1'])) && $this->error('火化证编号不能为空');
                (empty($result['cemetery_id_card'])) && $this->error('墓穴证编号不能为空');
                (empty($result['id_card'])) && $this->error('身份证号不能为空');
                (empty($result['phone'])) && $this->error('手机号码不能为空');
            }else{
                $result = input('post.');
            }
            $result['cemetery_id'] = DB::table('tp_cemetery_sn')->where('cemetery_sn',$result['cemetery_sn'])->value('cemetery_id');
            if ($data['Ctype'] == 2 && $data['is_bury'] == 2) {
                $deader_2 = [
                    'id'=>$result['dead_id_2'],
                    'dead_name' => $result['dead_name_2'],
                    'dead_id_card' => $result['dead_id_card2'],
                    'sex' => $result['sex_2'],
                    'age' => $result['age_2'],
                    'dead_birthday' => $result['dead_birthday_2'],
                    'dead_deadday' => $result['dead_deadday_2'],
                    'dead_domicile' => $result['dead_domicile_2'],
                    'dead_nation' => $result['dead_nation_2'],
                    'address' => $result['dead_address_2'],
                    'create_by' => $this->uid,
                    'create_at' => time(),
                    'cemetery_sn' => $result['cemetery_sn'],
                    'cemetery_id'=> $result['cemetery_id']
                ];
            }else{
                $deader_1 = [
                    'id'=>$result['dead_id_1'],
                    'dead_name' => $result['dead_name_1'],
                    'dead_id_card' => $result['dead_id_card1'],
                    'sex' => $result['sex_1'],
                    'age' => $result['age_1'],
                    'dead_birthday' => $result['dead_birthday_1'],
                    'dead_deadday' => $result['dead_deadday_1'],
                    'dead_domicile' => $result['dead_domicile_1'],
                    'dead_nation' => $result['dead_nation_1'],
                    'address' => $result['dead_address_1'],
                    'create_by' => $this->uid,
                    'create_at' => time(),
                    'cemetery_sn' => $result['cemetery_sn'],
                    'cemetery_id'=> $result['cemetery_id']
                ];
            }
            $bury=[
                'cost'=>$result['cost'],
                'update_at'=>time(),
                'status'=>0,
                'bury_time'=>strtotime($result['bury_time'])
            ];
            // 如果消费为0,自动设置 tp_business_finance 订单状态为已收款
            if($result['cost'] == 0){
                $finance_b=[
                    'cemetery_sn' => $info['cemetery_sn'],
                    'order_sn'=>$info['order_sn'],              
                    'buyer_id_card'=>$data['buyer_id_1'],   
                    'buyer_name'=>$data['buyer_name_1'],   
                    'buyer_phone'=>$data['phone'],          
                    'add_time'=>time(),                        
                    'seller'=>$data['seller']['id'],
                    'create_by'=>$this->uid,                   
                    'order_amount'=>0,
                    'order_state'=>30,
                    'finnshed_time'=>time()
                ];
            }else{
                $finance_b=[
                    'cemetery_sn' => $info['cemetery_sn'],
                    'order_sn'=>$info['order_sn'], 
                    'buyer_id_card'=>$data['buyer_id_1'],  
                    'buyer_name'=>$data['buyer_name_1'],     
                    'buyer_phone'=>$data['phone'],
                    'add_time'=>time(),  
                    'seller'=>$data['seller']['id'],
                    'create_by'=>$this->uid,
                    'order_amount'=>$result['cost'],
                    'order_state'=>20
                ];
            }

            $conData=[
                'member_id'=>$data['buyer_id_1'],
                'name'=>$result['username'],
                'id_card'=>$result['id_card'],
                'phone'=>$result['phone'],
                'amount'=>$result['cost'],
                'create_time'=>date('Ymd'),
                'type'=>'安葬登记',
                'order_sn'=>$result['order_sn'],
                'agent'=>$data['seller']['id'],
                'create_by'=>$this->uid
            ];
            $DeadModel = new DeadModel();
            DB::startTrans();
            try {
                if($data['Ctype'] == 1){# 单人墓
                    // 更新此订单的安葬指派状态
                    DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_bury'=>'1']);
                    // 添加财务流水
                    $bury_2=Db::name('business_finance')->where( ['order_sn'=>$info['order_sn'],'order_source'=>'3'])->find();
                    if(empty($bury_2)){
                        $res=Db::name('business_finance')->data(['order_source'=>'3'])->insertGetId($finance_b);//生成安葬报表
                        $iMap['finance_id'] = $res;
                    }else{
                        $this->error('此订单已经指派');
                    }
                    // 添加安葬订单
                    $bury_1= Db::name('cemetery_bury')->where( 'order_sn',$info['order_sn'])->find();
                    if(empty($bury_1)){
                        $ret=  Db::name('cemetery_bury')->insertGetId($iMap);
                    }else{
                        $this->error('此订单已经指派');
                    }
                    // 填写逝者信息
                    if($deader_1['id'] == ''){
                        $ret1 = $DeadModel->save($deader_1);
                    }else{
                        $ret1 = $DeadModel->isUpdate()->save($deader_1);
                    }
                    if($result['dead_id_1'] == ''){
                        $result['dead_id_1'] = $DeadModel->id;
                        DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['deader_id_1'=>$result['dead_id_1']]);
                    }
                    

                    Db::name('cemetery_bury')->where('id',$ret)->update($bury);
                    $fin=Db::name('business_finance')
                           ->where(['order_sn'=>$result['order_sn'],'order_source'=>'3'])->update($finance_b);
                    $coninfo=Db::name('cemetery_consume')->where('order_sn',$result['order_sn'])->find();
                    if(isset($coninfo)){
                        Db::name('cemetery_consume')->insert($conData);
                    }else{
                        Db::name('cemetery_consume')->where('id',$coninfo['id'])->update($conData);
                    }
                    $deader = [
                        'cemetery_id'=> $result['cemetery_id'],
                        'deader_name_1' => $result['dead_name_1'],
                        'dead_id_card1' => $result['dead_id_card1'],
                        'deader_id_1' => $result['dead_id_1'],
                        'order_state'=>30
                    ];
                    $res = Db::name('cemeteryOrder')->where('order_id', $data['order_id'])->update($deader);
                }else{# 双人墓
                    if($data['is_bury'] == 0){# 一次指派
                        DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_bury'=>'2']);
                        $res=Db::name('business_finance')->data(['order_source'=>'3'])->insertGetId($finance_b);//生成安葬财务表
                        $iMap['finance_id'] = $res;
                        $ret=Db::name('cemetery_bury')->insertGetId($iMap);
                        if($deader_1['id'] == ''){
                            $ret1 = $DeadModel->save($deader_1);
                        }else{
                            $ret1 = $DeadModel->isUpdate()->save($deader_1);
                        }
                        if($result['dead_id_1'] == ''){
                            $result['dead_id_1'] = $DeadModel->id;
                            DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])
                              ->update(['deader_id_1'=>$result['dead_id_1']]);
                        }
                        
                        $deader = [
                            'cemetery_id'=> $result['cemetery_id'],
                            'deader_name_1' => $result['dead_name_1'],
                            'dead_id_card1' => $result['dead_id_card1'],
                            'deader_id_1' => $result['dead_id_1'],
                            'order_state'=>30
                        ];
                    }elseif($data['is_bury'] == 2){# 二次指派
                        DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_bury'=>'3']);
                        $res=Db::name('business_finance')->data(['order_source'=>'3'])->insertGetId($finance_b);//生成安葬财务表
                        $iMap['finance_id'] = $res;
                        $ret=Db::name('cemetery_bury')->insertGetId($iMap);
                        if($deader_2['id'] == ''){
                            $ret2 = $DeadModel->save($deader_2);
                        }else{
                            $ret2 = $DeadModel->isUpdate()->save($deader_2);
                        }
                        if($result['dead_id_2'] == ''){
                            $result['dead_id_2'] = $DeadModel->id;
                            DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])
                              ->update(['deader_id_2'=>$result['dead_id_2']]);
                        }
                        
                        $deader = [
                            'cemetery_id'=> $result['cemetery_id'],
                            'deader_name_2' => $result['dead_name_2'],
                            'dead_id_card2' => $result['dead_id_card2'],
                            'deader_id_2' => $result['dead_id_2'],
                            'order_state'=>30
                        ];
                    }else{
                        $this->error('此订单已经指派');
                    }
                    Db::name('cemetery_bury')->where(['cemetery_sn'=>$result['cemetery_sn'],'id'=>$ret])->update($bury);
                    $fin=Db::name('business_finance')
                           ->where(['order_sn'=>$result['order_sn'],'order_source'=>'安葬订单'])->update($finance_b);
                    $coninfo=Db::name('cemetery_consume')->where('order_sn',$result['order_sn'])->find();
                    if(isset($coninfo)){
                        Db::name('cemetery_consume')->insert($conData);
                    }else{
                        Db::name('cemetery_consume')->where('id',$coninfo['id'])->update($conData);
                    }
                    
                    $res = Db::name('cemeteryOrder')->where('order_id', $data['order_id'])->update($deader);
                }
                Db::commit();
                // $jssdk = new Jssdk();
                // $wx_content = "您有一个安葬订单!墓穴编号为".$info['cemetery_sn']
                //             . "订单编号为".$info['order_sn']
                //             . "客户姓名为".$result['username'];
                // $userInfo = Db::name('BusinessStaff')->where('id', $info['opera'])->find();
                // $jssdk->push_msg($userInfo['wechat_openid'], $wx_content);
                $this->success('操作成功！', url('/').'business.html#'.url('order/index').'?spm='.$this->spm);
            } catch (Exception $e) {
                Db::rollback();
                $this->error('操作失败，请稍候再试！');
            }
        }
        if($data['Ctype'] == 1 || $data['is_bury'] == 0){
            return $this->fetch('', ['title' => '安装登记 / 指派']);
        }else{
            return $this->fetch('bury_2', ['title' => '二次安葬登记 / 指派']);
        }
        
    }





    // /**
    //  * [指派安葬订单 / 安葬登记]
    //  * 
    //  */
    // public function bury(){
    //     $this->title = '安葬登记 / 指派';
    //     $id = input('order_id');
    //     //获取墓位信息
    //     $data = Db::table('tp_cemetery_order')->where('order_id', $id)->find();
    //     # 墓位类型(1:单人墓,2:双人墓)
    //     $data['Ctype'] = $this->_getCemeteryInfo($id)['type'];   
    //     $data['name'] = $data['goods_name'];
    //     $this->assign('vo', $data);
    //     //获取选择的套餐
    //     $inscrpack=Db::name('cemetery_pack')->where(['order_sn'=>$data['order_sn'],'type'=>1])->select();
    //     $pack = [];
    //     foreach ($inscrpack as $k=>$value){
    //         $pack[] =Db::name('cemetery_combo')->where('id',$value['pack_id'])->find();
    //     }
    //     $this->assign('pack',$pack);
    //     //获取订单信息
    //     $reserve = Db::name('cemetery_order')->where('cemetery_sn', $data['cemetery_sn'])->find();
    //     //获取使用者信息
    //     $dead1=Db::name('storage_dead')->where('id', $reserve['deader_id_1'])->find();
    //     if ($data['type']==2){
    //         $dead2=Db::name('storage_dead')->where('id',$reserve['deader_id_2'])->find();
    //         $this->assign('dead2', $dead2);
    //     }
    //     //获取客户信息
    //     $seller = Db::name('BusinessStaff')->where('id', $reserve['seller'])->find();

    //     if (!$reserve == null) {
    //         $reserve['seller'] = $seller;

    //         $buyer_id = $reserve['buyer_id_1'];
    //         $buyer = Db::name('Customer')->where('id', $buyer_id)->find();
    //         $this->assign('buyer', $buyer);
    //     }
    //     //获取销售人员
    //     $cond = [
    //         'status' => 1,
    //         'create_by' => $this->uid
    //     ];
    //     $staff = Db::name('BusinessStaff')->where($cond)->select();
    //     //派遣人员
    //     $cond = [
    //         'status' => 1,
    //         'create_by' => $this->uid
    //     ];
    //     $staff_d = Db::name('BusinessStaff')->where($cond)->select();
    //     foreach ($staff_d as $k=>$v){
    //         $staff_d[$k]['sector']=Db::name('BusinessAuth')->where('id',$v['sector'])->value('name');
    //     }
    //     $this->assign('dead1', $dead1);
    //     $this->assign('seller',$seller);
    //     $this->assign('staff_d', $staff_d);
    //     $this->assign('staff', $staff);
    //     $this->assign('reser',$reserve);
    //     if($this->request->isPost()) {
    //         # 指派数据
    //         $info = input('post.');
            
    //         $iMap=[
    //             'member_name'=>$reserve['buyer_name_1'],
    //             'id_card'=>$reserve['buyer_id_1'],
    //             'phone'=>$reserve['phone'],
    //             'cemetery_id' => $reserve['cemetery_id'],
    //             'cemetery_sn' => $info['cemetery_sn'],
    //             'order_sn'=>$info['order_sn'],
    //             'remark'=>$info['remark'],
    //             'opera'=>$info['opera'],
    //             'create_at'=>time(),
    //             'create_by'=>$this->uid
    //         ];
    //         $finance=[
    //             'cemetery_sn' => $info['cemetery_sn'],
    //             'order_sn'=>$info['order_sn'],              // 订单编号
    //             'buyer_id_card'=>$reserve['buyer_id_1'],    // 买家身份证号
    //             'buyer_name'=>$reserve['buyer_name_1'],     // 买家姓名
    //             'buyer_phone'=>$reserve['phone'],           // 买家手机
    //             'add_time'=>time(),                         // 订单生成时间
    //             'seller'=>$reserve['seller']['id'],
    //             'create_by'=>$this->uid                     // 创建者
    //         ];
    //         # 安葬登记数据
    //         if(is_mobile()){
    //             $result = ajax_url_params_to_array($this->request->param('params'));
    //             (empty($result['cost'])) && $this->error('支付金额不能为空');
    //             (empty($result['dead_birthday_1'])) && $this->error('安葬时间不能为空');
    //             (empty($result['dead_id_card1'])) && $this->error('火化证编号不能为空');
    //             (empty($result['cemetery_id_card'])) && $this->error('墓穴证编号不能为空');
    //             (empty($result['id_card'])) && $this->error('身份证号不能为空');
    //             (empty($result['phone'])) && $this->error('手机号码不能为空');
    //         }else{
    //             $result = input('post.');
    //         }
    //         $result['cemetery_id'] = DB::table('tp_cemetery_sn')->where('cemetery_sn',$result['cemetery_sn'])->value('id');
    //         $deader_1 = [
    //             'id'=>$result['dead_id_1'],
    //             'dead_name' => $result['dead_name_1'],
    //             'dead_id_card' => $result['dead_id_card1'],
    //             'sex' => $result['sex_1'],
    //             'age' => $result['age_1'],
    //             'dead_birthday' => $result['dead_birthday_1'],
    //             'dead_deadday' => $result['dead_deadday_1'],
    //             'dead_domicile' => $result['dead_domicile_1'],
    //             'dead_nation' => $result['dead_nation_1'],
    //             'address' => $result['dead_address_1'],
    //             'create_by' => $this->uid,
    //             'create_at' => time(),
    //             'cemetery_sn' => $result['cemetery_sn'],
    //             'cemetery_id'=> $result['cemetery_id']
    //         ];
    //         if ($data['Ctype'] == 2 && $data['is_bury'] == 2) {
    //             $deader_2 = [
    //                 'id'=>$result['dead_id_2'],
    //                 'dead_name' => $result['dead_name_2'],
    //                 'dead_id_card' => $result['dead_id_card2'],
    //                 'sex' => $result['sex_2'],
    //                 'age' => $result['age_2'],
    //                 'dead_birthday' => $result['dead_birthday_2'],
    //                 'dead_deadday' => $result['dead_deadday_2'],
    //                 'dead_domicile' => $result['dead_domicile_2'],
    //                 'dead_nation' => $result['dead_nation_2'],
    //                 'address' => $result['dead_address_2'],
    //                 'create_by' => $this->uid,
    //                 'create_at' => time(),
    //                 'cemetery_sn' => $result['cemetery_sn'],
    //                 'cemetery_id'=> $result['cemetery_id']
    //             ];
    //         }
    //         $bury=[
    //           'cost'=>$result['cost'],
    //           'update_at'=>time(),
    //            'status'=>0
    //         ];
            

    //         if($result['cost'] == 0){
    //             $finance_b=[
    //                 'cemetery_sn' => $info['cemetery_sn'],
    //                 'order_sn'=>$info['order_sn'],              // 订单编号
    //                 'buyer_id_card'=>$reserve['buyer_id_1'],    // 买家身份证号
    //                 'buyer_name'=>$reserve['buyer_name_1'],     // 买家姓名
    //                 'buyer_phone'=>$reserve['phone'],           // 买家手机
    //                 'add_time'=>time(),                         // 订单生成时间
    //                 'seller'=>$reserve['seller']['id'],
    //                 'create_by'=>$this->uid,                    // 创建者
    //                 'order_amount'=>0,
    //                 'order_state'=>30,
    //                 'finnshed_time'=>time()
    //             ];
    //         }else{
    //             $finance_b=[
    //                 'cemetery_sn' => $info['cemetery_sn'],
    //                 'order_sn'=>$info['order_sn'],              // 订单编号
    //                 'buyer_id_card'=>$reserve['buyer_id_1'],    // 买家身份证号
    //                 'buyer_name'=>$reserve['buyer_name_1'],     // 买家姓名
    //                 'buyer_phone'=>$reserve['phone'],           // 买家手机
    //                 'add_time'=>time(),                         // 订单生成时间
    //                 'seller'=>$reserve['seller']['id'],
    //                 'create_by'=>$this->uid,                    // 创建者
    //                 'order_amount'=>$result['cost'],
    //                 'order_state'=>20
    //             ];
    //         }

    //         $conData=[
    //             'member_id'=>$reserve['buyer_id_1'],
    //             'name'=>$result['username'],
    //             'id_card'=>$result['id_card'],
    //             'phone'=>$result['phone'],
    //             'amount'=>$result['cost'],
    //             'create_time'=>date('Ymd'),
    //             'type'=>'安葬登记',
    //             'order_sn'=>$result['order_sn'],
    //             'agent'=>$reserve['seller']['id'],
    //             'create_by'=>$this->uid
    //         ];
    //         DB::startTrans();
    //         try {
    //             DB::table('tp_cemetery_order')->where('order_sn',$info['order_sn'])->update(['is_bury'=>'1']);
    //             $bury_1= Db::name('cemetery_bury')->where( 'order_sn',$info['order_sn'])->find();
    //             if(empty($bury_1)){
    //                 $ret=  Db::name('cemetery_bury')->insert($iMap);
    //             }else{
    //                 $this->error('此订单已经指派');
    //             }
    //             $bury_2=Db::name('business_finance')->where( ['order_sn'=>$info['order_sn'],'order_source'=>'3'])->find();
    //             if(empty($bury_2)){
    //                 $res=Db::name('business_finance')->data(['order_source'=>'3'])->insert($finance_b);//生成安葬报表
    //             }else{
    //                 $this->error('此订单已经指派');
    //             }

    //             $ret1 = Db::name('storage_dead')->update($deader_1);
    //             if ($data['Ctype'] == 2 && $data['is_bury'] == 2) {
    //                 $ret2 = Db::name('storage_dead')->update($deader_2);
    //             }
    //             Db::name('cemetery_bury')->where('cemetery_sn',$result['cemetery_sn'])->update($bury);
    //             $fin=Db::name('business_finance')->where(['order_sn'=>$result['order_sn'],'order_source'=>'安葬订单'])->update($finance_b);

    //             $coninfo=Db::name('cemetery_consume')->where('order_sn',$result['order_sn'])->find();
    //             if(isset($coninfo)){
    //                 Db::name('cemetery_consume')->insert($conData);
    //             }else{
    //                 Db::name('cemetery_consume')->where('id',$coninfo['id'])->update($conData);
    //             }

    //             if ($data['Ctype'] == 2 && $data['is_bury'] ==2) {
    //                 $deader = [
    //                     'cemetery_id'=> $result['cemetery_id_card'],
    //                     'deader_name_1' => $result['dead_name_1'],
    //                     'deader_name_2' => $result['dead_name_2'],
    //                     'order_state'=>30
    //                 ];
    //             }else{
    //                 $deader = [
    //                     'cemetery_id'=> $result['cemetery_id_card'],
    //                     'deader_name_1' => $result['dead_name_1'],
    //                     'order_state'=>30
    //                 ];
    //             }
    //             $res = Db::name('cemeteryOrder')->where('order_id', $reserve['order_id'])->update($deader);
    //             // 成功 推送到微信号
    //             // $jssdk = new Jssdk();
    //             // $wx_content = "您有一个安葬订单!墓穴编号为".$info['cemetery_sn']."订单编号为".$info['order_sn']."客户姓名为".$reserve['buyer_name_1'];
    //             // $userInfo = Db::name('BusinessStaff')->where('id', $info['opera'])->find();
    //             // $jssdk->push_msg($userInfo['wechat_openid'], $wx_content);
    //             Db::commit();
    //             $this->success('操作成功！', url('/').'business.html#'.url('order/index').'?spm='.$this->spm);
    //         } catch (Exception $e) {
    //             Db::rollback();
    //             $this->error('操作失败，请稍候再试！');
    //         }
    //     }
    //     if($data['Ctype'] == 1 || $data['is_bury'] == 0){
    //         return $this->fetch('', ['title' => $this->title]);
    //     }else{
    //         return $this->fetch('bury_2', ['title' => '二次登记 / 指派']);
    //     }
        
    // }

    /**
     * 选择合同模板
     */
    public function selectContract()
    {
        $category = Db::name('Cemetery_contract')->where(['create_by'=>$this->uid])->select();
        $category = ToolsService::arr2tree($category);

        return $category;
    }


    /**
     * 打印合同
     */
    public function contract()
    {
        $order_id = $this->request->param('order_id');
        $data=$this->selectContract();
        $order_info=Db::name('cemetery_order')->where('order_id',$order_id)->find();
        $tomb=Db::name('cemetery_sn')->where('cemetery_sn',$order_info['cemetery_sn'])->find();

        $this->assign('tomb',$tomb);
        $this->assign('order_info',$order_info);
        $this->assign('data',$data);
        return $this->fetch('');
    }

    /**
     * 获取合同内容
     */
    public function ajaxContract()
    {
        $id=input('post.');
        $contract=Db::name('Cemetery_contract')->where($id)->value('content');
        return $this->response($contract);
    }


    public function addcontract()
    {
        $data=input('post.');
        $type=Db::name('cemetery_order')->where('order_id',$data['order_id'])->value('type');


        if($type==2){
            $data['contract_image']=$data['value'];
            unset($data['value']);
            $c_img=Db::name('cemetery_order')->update($data);
        }else{
            $data['reserve_image']=$data['value'];
            unset($data['value']);
            $c_img=Db::name('cemetery_order')->update($data);
        }

        if($c_img){
            return $this->response('','','上传成功！');
        }else{
            return $this->response('','','上传失败！');
        }

    }

    /**
     * [展示合同图片]
     */
    public function showContrach(){
        $id = input('id');
        $type = DB::table('tp_cemetery_order')->where('order_id',$id)->value('type');
        $field = 'contract_image';
        if($type == 1){// 预定
            $field = 'reserve_image';
        }
        $imgPath = DB::table('tp_cemetery_order')->where('order_id',$id)->value($field);
        if(empty($imgPath)){
            return '<h2 style="text-align:center;">还没有上传合同</h2>';
        }
        $this->assign('imgPath',$imgPath);
        return $this->fetch();
    }


}
